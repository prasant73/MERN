
strings

- rotate a string n times
- move all spaces in a string to the front of an string
- check if a string is a rotation of any other string
- check if any anagram of a string is palindrome or not




n = spaces + characters

characters = n - spaces


n = 4
horizontal => n * 2
vertical lines = n + 1

********
********
   **
   **
   **
   **
   **

A

n = 4
num of charac => l = n + 2
l1 = 1 space + n characters + 1 space
l2 => l characters
l3 => 2 characters + 2 spaces + 2 characters
l4 => l characters
l5 & l6 = l3

 ****
******
**  **
******
******
**  **
**  **


n = 5
char = * or better take char as input

1

*
**
***
****
*****


2
*****
****
***
**
*

3
    *
   **
  ***
 ****
*****

4
*****
 ****
  ***
   **
    *


5
    *
   ***
  *****
 *******
*********


6
*********
 *******
  *****
   ***
    *


7
    *
   **
  ***
 ****
*****
 ****
  ***
   **
    *


8
*
**
***
****
*****
****
***
**
*


9
    *
   ***
  *****
 *******
*********
 *******
  *****
   ***
    *


10
*********
**** ****
***   ***
**     **
*       *
**     **
***   ***
**** ****
*********

Print Character [0, 1, 8, U, I, Z] using *
print hara

